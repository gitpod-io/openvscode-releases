name: Switch workflow branches
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to check"
        required: false
  # workflow_call:
  #   inputs:
  #     version:
  #       description: 'The next VS Code version'
  #       type: string
  #       required: true
  #   secrets:
  #     SLACK_WEBHOOK:
  #       required: true

env:
  NEXT_TAG: ${{ github.event.inputs.version }}

jobs:
  branch-switch:
    # if: github.event.inputs.version ||  github.event.workflow_run.conclusion != 'failure'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          path: '/tmp/gitpod/'
          repository: 'gitpod-io/gitpod'
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Run the branch switch-a-roo
        uses: actions/github-script@v6
        with:
          script: |
            const { inc, major, minor } =  require('semver');
            const fs =  require('fs');

            const replaceInFile = (file, transform) => {
                const text = fs.readFileSync(file, 'utf8');
                const transformed = transform(text);
                fs.writeFileSync(file, transformed, 'utf-8');
            }

            const getNextReleaseTag = async () => {
                const releaseResult = await github.rest.repos.getLatestRelease({
                    owner: 'gitpod-io',
                    repo: 'openvscode-server',
                });
                return inc(releaseResult.data.tag_name.split("-").at(-1), 'minor');
            }

            const nextTag = process.env.NEXT_TAG || await getNextReleaseTag();
            let branchExists = false;

            try {
                const branch = `release/${major(nextTag)}.${minor(nextTag)}`;
                await github.rest.repos.getBranch({
                    owner: 'microsoft',
                    repo: 'vscode',
                    branch,
                });
                branchExists = true;
                console.info(`A release for ${nextTag} branch does exist already. Changing files...`, e);
                replaceInFile('.github/workflows/insiders-gp.yml', (object) => {
                    object = object.replace("'upstream/main'", `'upstream/${branch}'`);
                    object = object.replace("'gp-code/main'", `'gp-code/${branch}'`);
                    return object;
                });
                replaceInFile('.github/workflows/insiders.yml', (object) => {
                    object = object.replace("'upstream/main'", `'upstream/${branch}'`);
                    object = object.replace("'main'", `'${branch}'`);
                    return object;
                });
            } catch (e) {
                console.info(`A release for ${nextTag} branch does not exist. Reverting to main.`);
                replaceInFile('.github/workflows/insiders-gp.yml', (object) => {
                    object = object.replace(/'upstream\/release\/.{1,5}'/i, "'upstream/main'");
                    object = object.replace(/'gp-code\/release\/.{1,5}'/i, "'gp-code/main'");
                    return object;
                });
                replaceInFile('.github/workflows/insiders.yml', (object) => {
                    object = object.replace(/'upstream\/release\/.{1,5}'/i, "'upstream/main'");
                    object = object.replace(/'release\/.{1,5}'/i, "'main'");
                    return object;
                });
            }

            // Change the values in the gitpod-io/gitpod repository

            if (!fs.existsSync('/tmp/gitpod/.github/workflows/')) {
                console.error('Could not find gitpod repo under /tmp/gitpod. Please clone it in that location.')
                process.exit();
            }

            if (branchExists) {
                replaceInFile('/tmp/gitpod/.github/workflows/code-nightly.yaml', (object) =>
                    object.replace(/https:\/\/api.github.com\/repos\/gitpod-io\/openvscode-server\/commits\/gp-code\/release\/.{1,5}/i, 'https://api.github.com/repos/gitpod-io/openvscode-server/commits/gp-code/main'))
            } else {
                replaceInFile('/tmp/gitpod/.github/workflows/code-nightly.yaml', (object) =>
                    object.replace('https://api.github.com/repos/gitpod-io/openvscode-server/commits/gp-code/main', `https://api.github.com/repos/gitpod-io/openvscode-server/commits/gp-code/release/${nextTag}`))
            }
      - name: Commit changes (openvscode-releases)
        uses: devops-infra/action-commit-push@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          commit_prefix: "[AUTO]"
          commit_message: "Update release branch"

      - name: Create Pull Request (gitpod)
        uses: peter-evans/create-pull-request@v4
        id: gp-pr
        with:
          path: /tmp/gitpod/
          commit-message: "code: Update Nightly"
          branch: "code-update-nightly"
          delete-branch: true
          title: "code: Update Nightly"

      - name: Set env
        run: echo "COMMIT_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Began new VS Code Release
          SLACK_MESSAGE: 'Updated openvscode-releases with [${{ env.COMMIT_SHA_SHORT }}](https://github.com/${{ github.repository_owner }}/gitpod/commit/${{ env.COMMIT_SHA_SHORT }}) and created [${{ steps.gp-pr.outputs.pull-request-number }}](${{ steps.gp-pr.outputs.pull-request-url }}) for updating `Code Nightly`.'
name: DockerHub Release
on:
  workflow_call:
    inputs:
      version:
        description: 'OpenVSCode Server version'
        type: string
        required: true
      stable:
        description: 'Stable or insiders release'
        type: boolean
        required: true
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: true

jobs:
  docker-release:
    runs-on: ubuntu-latest
    name: Build and publish Docker image
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      
      - name: Set Version and Quality
        run: |
          set -e
          version=${{ inputs.version }}
          quality_name=$([ ${{ inputs.stable }} = "false" ] && echo "-insiders" || echo "")
          echo "RELEASE_TAG=openvscode-server${quality_name}-v${version}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            gitpod/openvscode-server
          tags: |
            type=raw,value=${{ inputs.version }},enable=${{ inputs.stable == true }}
            type=raw,value=latest,enable=${{ inputs.stable == true }}
            type=raw,value=insiders,enable=${{ inputs.stable == false }}
            type=raw,value=nightly,enable=${{ inputs.stable == false }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          build-args: |
            RELEASE_TAG=${{ env.RELEASE_TAG }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Get previous job's status
        id: lastrun
        uses: filiptronicek/get-last-job-status@main

      - name: Slack Notification
        if: ${{ (success() && steps.lastrun.outputs.status == 'failed') || failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
